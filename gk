#!/usr/bin/env python2

#make a check for python verion
#need to cleanup threads, can't quick restart
'''
Created on Jun 14, 2010

@modified: Jun 14, 2010
@author: Dale Hamel
@contact: umhameld@cc.umanitoba.ca
'''

#boot strapper imports
import lib,sys,os
from lib import boot_strap

	
def main(request):
	def printHelp():
		debug.log("Available actions:",actions=actions)
	
	import debug 
	import cmds
	

	actions=("help","sync","userconf","ignore","_handhold")

	debug.label("Bootstrapping completed")
	debug.log("Got request: ",request=request)


	debug.log("Loading repo configurations")

	from gitlib import GKRepo
	from gitlib import getRepos

	repos=getRepos()


	#todo: add config check for default config options	
	if (len(request)!=0):
		action=request[0]

		if(len(request)>1):
			args=request[1:]	
		else:
			args=list()

		if(action=="configure"):
			cmds.gitConfigSetup(repos,args)
		elif(action=="sync"):
			cmds.safeSyncAll(repos,args)
		elif(action=="update"):
			cmds.safeUpdate(repos,args)
		elif(action=="ignore"):
			cmds.ignoreExpression(repos,args)
		elif(action=="help"):
			printHelp()
		else:
			cmds._handHold(repos)		
	else:
		cmds._handHold(repos)		

	import gkconfig
	repos=getRepos()
	for repo in repos:
		debug.log("Writing config for repo:"+repo.name)
		gkconfig.writeRepoToJson(repo)
		
	
"""
Todo: daemon mode,
	-fetch (but do not apply!) changes for all branches in background (speed boost)
	-syncdaemon: continuously sync (like dropbox)

	-create/destroy action wrappers
"""	
			

def init_boot_strap():
	boot_strap(main)


if __name__ == "__main__":
	init_boot_strap()
